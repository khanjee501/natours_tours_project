/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* GENERAL SETTINGS FOR * AND BODY */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

.header {
  height: 95vh;

  /* Image will be below the gradient as it is the 2nd value */
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.808),
      rgba(40, 180, 133, 0.808)
    ),
    url("../img/hero.jpg");

  /* THis will set the img so it is covered and fit inside the parent box */
  background-size: cover;

  /* Background-position: top; will always keep the top at top and crop other sides.
  other values are bottom, center etc */
  background-position: top;

  position: relative;

  /* starts from left top, then right top, then right bottom and last
  left bottom. Values are x y. the vh can also be pxls or percentage as well */

  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;

  /* Sometime sthe animation is abit shaky, this will fix it. By shaky
  it moves up a little and looks like it shakes. But in my case it is
  even ohkay without this prop, but included as a safe play */
  backface-visibility: hidden;
}

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  /* animations */
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-in-out;

  /*
  Will wait for 3 seconds and then the animation will start
  animation-delay: 3s
  Will happen 3 times as value is 3
  animation-iteration-count: 3
  */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
  margin-bottom: 60px;

  /* can also be written as */
  animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
  /* Start */
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }

  /* Between can be any % between 0 and 100 */
  80% {
    transform: translateX(10px);
  }

  /* End */
  100% {
    opacity: 1;
    /* because we wanrt it to be at its original position at the end of animation */
    transform: translate(0);
  }
}

.text-box {
  position: absolute;
  /* The below three properties will center the box hor and ver
    if we also use top 50%. We are using 40% bacuse we have clip path
    in the bototm border due to which it doesnt look centered if top 50%
    is used */
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);

  text-align: center;
}

@keyframes moveInRight {
  /* Start */
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  /* Between can be any % between 0 and 100 */
  80% {
    transform: translateX(-10px);
  }

  /* End */
  100% {
    opacity: 1;
    /* because we wanrt it to be at its original position at the end of animation */
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  /* Start */
  0% {
    opacity: 0;
    transform: translateY(100px);
  }

  /* End */
  100% {
    opacity: 1;
    /* because we wanrt it to be at its original position at the end of animation */
    transform: translate(0);
  }
}

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  display: inline-block;
  border-radius: 100px;
  transition: all 0.2s;

  /* we want the after psuedo elmenet of this button to hide behind this
  button, hence set position relative on this btn itself */
  position: relative;
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white {
  background-color: #fff;
  color: #777;
}

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}

.btn-white::after {
  background-color: #fff;
}

/* this style will only be applied on hover of the after psuedo-element
of the btn */

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn-animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* this will apply the start styles of animation before the animation starts */
  animation-fill-mode: backwards;
}
